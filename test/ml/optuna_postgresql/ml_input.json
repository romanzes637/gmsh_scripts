{
  "metadata": {
    "comments": "J - Jacobian determinant, IGE - Inverse Gradient Error, ICN - Condition Number",
    "ml": {}
  },
  "data": {
    "class": "action.optimize.Optuna",
    "study_name": "test_optuna_postgresql",
    "storage": "postgresql+psycopg2://ibrae:1234@10.254.55.75:5432/ibraedb",
    "load_if_exists": true,
    "n_trials": 3,
    "do_optimize": true,
    "optimize_executor": "ProcessPoolExecutor",
    "optimize_executor_kwargs": {"max_workers": 2},
    "optimize_timeout": null,
    "do_delete_study": false,
    "do_write_results": true,
    "sampler": "RandomSampler",
    "sampler_kwargs": null,
    "pruner": "NopPruner",
    "pruner_kwargs":  null,
    "do_update_sub_actions": true,
    "update_trial_number": null,
    "do_sub_call": false,
    "color_key": "objective_metrics",
    "optimize_path": "opt",
    "copies": ["_run_input.json"],
    "links": null,
    "sub_actions": [
      {"key": "log_path", "class": "action.Feature",
        "setter": {"class": "action.setter.Value", "value": "_run_input.log"},
        "getter": {"class": "action.getter.Json", "path": "_run_input.json",
          "mapping": {"metadata": {"run": {"log_path": "{}"}}}}
      },
      {"key": "size_points", "class": "action.Feature",
        "setter": {"class": "action.setter.Continuous", "low": 0.3, "high": 0.8},
        "getter": {"class": "action.getter.Json", "path": "_run_input.json",
          "mapping": {"data": {"layer": [["1;{};5", "2;{};5"], ["1;{};5", "2;{};5"]]}}}
      },
      {"key": "size_curvature", "class": "action.Feature",
        "setter": {"class": "action.setter.Discrete", "low": 10, "high": 40, "num": 31},
        "getter": {"class": "action.getter.Json", "path": "_run_input.json",
          "mapping": {"metadata": {"run": {"options": {"Mesh.MeshSizeFromCurvature": "{}"}}}}}
      },
      {"key": "size_min", "class": "action.Feature",
        "setter": {"class": "action.setter.Continuous", "low": 0, "high": 1},
        "getter": {"class": "action.getter.Json", "path": "_run_input.json",
          "mapping": {"metadata": {"run": {"options": {"Mesh.MeshSizeMin": "{}"}}}}}
      },
      {"key": "size_max", "class": "action.Feature",
        "setter": {"class": "action.setter.Continuous", "low": 1, "high": 5},
        "getter": {"class": "action.getter.Json", "path": "_run_input.json",
          "mapping": {"metadata": {"run": {"options": {"Mesh.MeshSizeMax": "{}"}}}}}
      },
      {"key": "size_factor", "class": "action.Feature",
        "setter": {"class": "action.setter.Continuous", "low": 0.5, "high": 1},
        "getter": {"class": "action.getter.Json", "path": "_run_input.json",
          "mapping": {"metadata": {"run": {"options": {"Mesh.MeshSizeFactor": "{}"}}}}}
      },
      {"key": "size_boundary", "class": "action.Feature",
        "setter": {"class": "action.setter.Discrete", "low": 1, "high": 2, "num": 2},
        "getter": {"class": "action.getter.Json", "path": "_run_input.json",
          "mapping": {"metadata": {"run": {"options": {"Mesh.MeshSizeExtendFromBoundary": "{}"}}}}}
      },
      {"class": "action.run.GmshScripts",
        "run_path": "../../../run.py",
        "write_mesh": true,
        "input_path": "_run_input.json"
      },
      {"key": "elements", "class": "action.Feature",
        "setter": {"class": "action.setter.RegexFile", "path": "_run_input.log",
          "value_type": "int", "regex": "Total:.*((?<=and)[\\s0-9]*(?=elements))"}
      },
      {"key": "constraint_J", "class": "action.Feature",
        "setter": {"class": "action.setter.Equation", "equation": "{0} > 0",
          "sub_actions": [
            {"class": "action.Feature", "key": "minJ_min",
            "setter": {"class": "action.setter.RegexFile", "path": "_run_input.log",
              "value_type": "float", "regex": "Info: minJ .*((?<==)[\\s0-9.e-]*(?=,))"}}
          ]}
      },
      {"key": "objective_elements", "class": "action.Feature",
        "setter": {"class": "action.setter.Equation", "equation": "{0}",
          "sub_actions": [
          {"class": "action.Feature",
            "key": "elements",
            "setter": {"class": "action.setter.RegexFile", "path": "_run_input.log",
              "value_type": "int", "regex": "Total:.*((?<=and)[\\s0-9]*(?=elements))"}}
          ]}
      },
      {"key": "objective_metrics", "class": "action.Feature",
        "setter": {"class": "action.setter.Equation", "equation": "min([{0}, {1}, {2}])",
          "sub_actions": [
            {"key": "minJ_by_maxJ_min", "class": "action.Feature",
            "setter": {"class": "action.setter.RegexFile", "path": "_run_input.log",
              "value_type": "float", "regex": "Info: minJ/maxJ .*((?<==)[\\s0-9.e-]*(?=,))"}},
            {"key": "IGE_min", "class": "action.Feature",
            "setter": {"class": "action.setter.RegexFile", "path": "_run_input.log",
              "value_type": "float", "regex": "Info: IGE .*((?<==)[\\s0-9.e-]*(?=,))"}},
            {"key": "ICN_min", "class": "action.Feature",
            "setter": {"class": "action.setter.RegexFile", "path": "_run_input.log",
              "value_type": "float", "regex": "Info: ICN .*((?<==)[\\s0-9.e-]*(?=,))"}}
          ]}
      }
    ],
    "objectives": {
      "objective_elements": "maximize",
      "objective_metrics": "minimize"
    },
    "constraints": ["constraint_J"]
  }
}
